env PATH;
# error_log  /live/log/error.log;
# error_log  /live/log/error.log  notice;
error_log  /live/log/error.log  info;
user  root;
rtmp {
    server {
        listen 1935;
        chunk_size 4000;
        
        # This application is to accept incoming stream
        application live {
            # enable live streaming
            live on;

            # push rtmp://localhost/rec/;

            # Once receive stream, transcode for adaptive streaming
            # This single ffmpeg command takes the input and transforms
            # the source into 4 different streams with different bitrate
            # and quality. P.S. The scaling done here respects the aspect
            # ratio of the input.
            exec ffmpeg -i rtmp://localhost/live/$name -async 1 -vsync -1 -c:v libx264 -c:a aac -b:v 256k -b:a 32k -vf "scale=480:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name_low -c:v libx264 -c:a aac -b:v 768k -b:a 96k -vf "scale=720:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name_mid -c:v libx264 -c:a aac -b:v 1024k -b:a 128k -vf "scale=960:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name_high -c:v libx264 -c:a aac -b:v 1920k -b:a 128k -vf "scale=1280:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name_hd720 -c copy -f flv rtmp://localhost/show/$name_src -c copy -f flv rtmp://localhost/rec/$name >/live/log/ffmpeg-$name.log 2>&1 ;
            # exec_record_done ffmpeg -y -i $path -codec copy -movflags +faststart $path.mp4;
            
        }

        # This application is for splitting the stream into HLS fragments
        application show {
            live on; # Allows live input from above

            hls on; # Enable HTTP Live Streaming
            # Pointing this to an SSD is better as this involves lots of IO
            hls_path /live/hls/;
            
            # Instruct clients to adjust resolution according to bandwidth
            hls_variant _low BANDWIDTH=288000; # Low bitrate, sub-SD resolution
            hls_variant _mid BANDWIDTH=448000; # Medium bitrate, SD resolution
            hls_variant _high BANDWIDTH=1152000; # High bitrate, higher-than-SD resolution
            hls_variant _hd720 BANDWIDTH=2048000; # High bitrate, HD 720p resolution
            hls_variant _src BANDWIDTH=4096000; # Source bitrate, source resolution
        }

        application rec {
            live on; # Allows live input from above

            record all;
            record_path /live/rec/;
            # record_suffix all.flv;
            # record_unique on;
            record_append on;
            # exec_record_done ffmpeg -y -i $path -codec copy -movflags +faststart $path.mp4;
            exec_record_done ffmpeg -y -i $path -acodec aac -ar 44100 -ac 2 -vcodec libx264 $dirname/$basename.mp4;
        }
    }
}